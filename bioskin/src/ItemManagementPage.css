/* src/ItemManagementPage.css */

/* Main page structure */
.item-management-page {
    display: flex;
    flex-direction: column;
    height: 100%;
}

.item-management-page .page-header-alt {
    flex-shrink: 0; /* Header doesn't shrink */
    /* ... other header styles ... */
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: calc(var(--spacing-unit) * 3);
    padding-bottom: calc(var(--spacing-unit) * 3);
    border-bottom: 1px solid var(--color-border-soft);
}

.item-management-page .page-header-alt h1 {
    font-size: 1.8em;
    color: var(--color-text-dark);
    font-weight: 700;
    margin: 0;
    text-align: left !important;
    border-bottom: none !important;
}

/* Wrapper for the main content block with overall golden border */
/* src/ItemManagementPage.css */

/* Main page structure */
.item-management-page {
    display: flex;
    flex-direction: column;
    height: 100%; /* Essential for child flex-grow to work as expected */
}

.item-management-page .page-header-alt {
    flex-shrink: 0; /* Header doesn't shrink */
    /* ... other header styles ... */
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: calc(var(--spacing-unit) * 3);
    padding-bottom: calc(var(--spacing-unit) * 3);
    border-bottom: 1px solid var(--color-border-soft);
}

.item-management-page .page-header-alt h1 {
    font-size: 1.8em;
    color: var(--color-text-dark);
    font-weight: 700;
    margin: 0;
    text-align: left !important;
    border-bottom: none !important;
}

/* Wrapper for the main content block */
.content-block-wrapper {
    flex-grow: 1; /* Allows this block to fill available vertical space */
    display: flex; /* Make it a flex container for its children */
    flex-direction: column; /* Stack children (filters, table-section, actions-bar) vertically */
    border: 1px solid var(--color-accent-gold) !important;
    padding: calc(var(--spacing-unit) * 4);
    background-color: var(--color-surface);
    border-radius: var(--border-radius-rounded);
    box-shadow: var(--box-shadow);
    overflow: hidden; /* Important for containing children, especially if one is scrolling */
}

/* Filters Section */
.filter-section-alt {
    flex-shrink: 0; /* Filters don't shrink */
    margin-bottom: calc(var(--spacing-unit) * 4);
}

.filters-bar {
    display: flex;
    flex-direction: column; /* STACK the rows of filters */
    align-items: stretch;  /* Make children (like .filter-row and the standalone select) take full width */
    gap: calc(var(--spacing-unit) * 3); /* Gap BETWEEN the rows */
}

.filter-row {
    display: flex;
    flex-direction: row; /* Items within this row are horizontal */
    align-items: center;
    gap: calc(var(--spacing-unit) * 3); /* Gap BETWEEN search and category */
    width: 100%; /* Make the row itself take full width */
}

/* Styles for individual filter controls (search, category group) - mostly same as before */
.search-input-group {
    flex-grow: 1; /* Search input takes more space within its row */
    min-width: 280px;
    /* ... (other .search-input-group styles: border, radius, height, etc. from previous response) ... */
    display: flex;
    align-items: center;
    border: 1px solid var(--color-accent-gold) !important;
    border-radius: var(--border-radius-rounded);
    background-color: var(--color-surface);
    height: 44px;
    box-sizing: border-box;
    padding: 0 calc(var(--spacing-unit) * 1.5);
}
/* ... (Styles for .search-icon, input[type="text"], .filter-action-icon) ... */
.search-input-group .search-icon {
    color: var(--color-text-medium);
    font-size: 1em;
    margin-right: calc(var(--spacing-unit) * 2);
}
.search-input-group input[type="text"] {
    flex-grow: 1;
    border: none; outline: none; background-color: transparent;
    font-size: 0.9em; color: var(--color-text-dark); height: 100%; padding: 0;
}
.search-input-group .filter-action-icon {
    color: var(--color-text-medium); font-size: 1em;
    margin-left: calc(var(--spacing-unit) * 2); cursor: pointer;
}
.search-input-group .filter-action-icon:hover { color: var(--color-text-dark); }


.filter-dropdown-group { /* For category dropdown with icon */
    min-width: 220px; /* Or adjust flex properties if needed */
    /* ... (other .filter-dropdown-group styles: border, radius, height, etc. from previous response) ... */
    display: flex;
    align-items: center;
    border: 1px solid var(--color-accent-gold) !important;
    border-radius: var(--border-radius-rounded);
    background-color: var(--color-surface);
    height: 44px;
    box-sizing: border-box;
    padding: 0 calc(var(--spacing-unit) * 1.5);
}
/* ... (Styles for .filter-icon, select.filter-dropdown within the group) ... */
.filter-dropdown-group .filter-icon {
    color: var(--color-text-medium); font-size: 1em;
    margin-right: calc(var(--spacing-unit) * 2); flex-shrink: 0;
}
.filter-dropdown-group select.filter-dropdown {
    flex-grow: 1; border: none; outline: none; background-color: transparent;
    font-size: 0.9em; color: var(--color-text-dark); height: 100%;
    appearance: none; background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%233E2F28' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3E%3C/svg%3E");
    background-repeat: no-repeat; background-position: right calc(var(--spacing-unit) * 1.5) center;
    background-size: 1em; padding-left: 0; padding-right: calc(var(--spacing-unit) * 4);
    line-height: normal; cursor: pointer;
}


/* Styles for the standalone Storage dropdown to make it full width on its row */
select.filter-dropdown.standalone-filter.storage-filter-full-width {
    width: 100%; /* Make it take full width of its parent (.filters-bar) */
    min-width: 100%; /* Ensure it stretches */
    /* ... (other .standalone-filter styles: border, radius, height, text styles, arrow etc. from previous response) ... */
    /* These are inherited if the base standalone-filter class is kept, or repeat them: */
    display: flex; /* Though not strictly needed for select, good for consistency if it were a group */
    align-items: center;
    border: 1px solid var(--color-accent-gold) !important;
    border-radius: var(--border-radius-rounded);
    background-color: var(--color-surface);
    height: 44px;
    box-sizing: border-box;
    font-size: 0.9em;
    color: var(--color-text-dark);
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%233E2F28' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right calc(var(--spacing-unit) * 1.5) center;
    background-size: 1em;
    padding-left: calc(var(--spacing-unit) * 1.5); /* Standard left padding for text */
    padding-right: calc(var(--spacing-unit) * 4); /* Space for the arrow */
    line-height: normal;
    cursor: pointer;
}

/* Stock List Section (Scrollable Area) */
.stock-list-section {
    /* flex-grow: 1; */   /* OPTION 1: Temporarily comment this out if using max-height primarily */
    max-height: 60vh;   /* OPTION 2: TRY THIS FIRST. Use a viewport height unit, or a fixed px value like 400px or 500px */
                        /* Adjust this value (55vh) until the gap is reasonable or disappears. */
                        /* This tells the section: "Don't grow taller than this, then scroll." */

    overflow-y: auto;   /* Enables vertical scrollbar IF content overflows its allocated height */
    min-height: 200px;  /* Reduced min-height, adjust if needed. Ensures it's visible. */

    border: 1px solid var(--color-border-soft);
    border-radius: var(--border-radius);
    padding: 0; /* Ensure no internal padding is adding to the height before scrolling */

}

.stock-list-section .table-container {
    width: 100%;
    height: 100%; /* Make table container fill the .stock-list-section */
}

#itemTable {
    margin-bottom: 0 !important; /* Good to keep */
}

/* Loading Placeholder (inside .stock-list-section) */
.loading-placeholder {
    text-align: center;
    padding: 2rem 1rem; /* Reduced padding if it was contributing to height */
    color: var(--color-text-light);
    font-style: italic;
    /* Ensure it's displayed appropriately if .stock-list-section has a small height */
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 100px; /* Example, so placeholder text is visible */
}

/* Action Buttons Bar */
.page-actions-bar {
    flex-shrink: 0;
    margin-top: calc(var(--spacing-unit) * 2); /* This now primarily controls the gap */
    display: flex;
    gap: calc(var(--spacing-unit) * 2);
    align-items: center;
}
.page-actions-bar .button {
   border-radius: var(--border-radius-rounded);
   padding: calc(var(--spacing-unit) * 2) calc(var(--spacing-unit) * 3.5);
   font-weight: 500;
}
/* In ItemManagementPage.css or index.css */
#itemTable thead th[onClick] { /* Targets th elements that have an onClick prop (our sortable ones) */
    cursor: pointer;
    user-select: none; /* Prevents text selection when clicking to sort */
}

#itemTable thead th[onClick]:hover {
    background-color: var(--color-table-row-hover); /* Or a slightly darker header bg */
}
/* In ItemManagementPage.css or index.css */
#itemTable .quantity-cell { /* Or just .quantity-cell if globally unique */
  text-align: center !important; /* Use !important only if necessary to override other styles */
}